1
00:00:05,650 --> 00:00:12,370
In this lesson, you're going to learn about the Amazon Elastic compute cloud, also known as EC2.

2
00:00:12,760 --> 00:00:19,810
Easy two is really one of the oldest and most important services on AWS, and it's the service that

3
00:00:19,810 --> 00:00:23,280
we can use to run virtual servers in the cloud.

4
00:00:23,290 --> 00:00:29,920
So let's have a look at what EC2 is and how it can help businesses in the US data center.

5
00:00:29,950 --> 00:00:34,600
Eight AWS have lots of servers and we'll call those easy to host servers.

6
00:00:34,690 --> 00:00:42,670
Now the ESI two instances run on top of the host server, so this is an example of server virtualization.

7
00:00:42,670 --> 00:00:51,700
The AC two hosts, the actual physical servers are fully managed by AWS and we then launch our EC2 instances

8
00:00:51,700 --> 00:00:56,350
and those instances can run Windows or Linux or Mac OS.

9
00:00:56,350 --> 00:00:58,300
So that's the operating system.

10
00:00:58,720 --> 00:01:04,780
And of course then we can install our applications like websites or whatever our application is on top

11
00:01:04,780 --> 00:01:06,400
of our EC2 instance.

12
00:01:06,400 --> 00:01:13,420
So the instance is a virtual server, there's a variety of instance types and they have a different

13
00:01:13,420 --> 00:01:17,410
combination of CPU memory storage and networking.

14
00:01:17,410 --> 00:01:23,200
So you can choose the instance type that is best suited for your particular use case.

15
00:01:23,200 --> 00:01:28,360
So you get to choose your instance type and then the operating system that you want to run and that

16
00:01:28,360 --> 00:01:30,850
can be Windows, Linux or Mac OS.

17
00:01:30,850 --> 00:01:35,230
Now AC two is an example of infrastructure as a service.

18
00:01:35,230 --> 00:01:39,340
You learned about that earlier in the course, IaaS or IaaS.

19
00:01:39,460 --> 00:01:46,540
So with infrastructure as a service at AWS are going to manage the physical hardware and they manage

20
00:01:46,540 --> 00:01:51,100
the software, the virtualization and management layer that sits on top of the hardware.

21
00:01:51,100 --> 00:01:54,820
But the key to instance is something that you manage.

22
00:01:54,820 --> 00:02:00,970
So you have to manage Windows and whatever application you put on top, that means things like patching

23
00:02:00,970 --> 00:02:02,380
are your responsibility.

24
00:02:02,380 --> 00:02:09,039
Now each instance will be attached to a network and that network is within your virtual private cloud,

25
00:02:09,039 --> 00:02:16,360
your VPC, and you will choose the subnets that you want to assign to your EC2 instance and that determines

26
00:02:16,360 --> 00:02:20,350
where they're launched and what they can access from a network perspective.

27
00:02:20,500 --> 00:02:26,920
Now each instance will have one or more IP addresses, and as you can see from this table, there are

28
00:02:26,920 --> 00:02:29,110
three different types of IP address.

29
00:02:29,110 --> 00:02:32,740
The first one at the top of the table is a public IP address.

30
00:02:32,740 --> 00:02:38,830
If your instance is running in a public subnet within the VPC, it will have a public IP address.

31
00:02:39,010 --> 00:02:45,130
Now these are lost when the instances stopped, that means they're assigned dynamically and if you stop

32
00:02:45,130 --> 00:02:50,950
the instance and start it again, it will have a different public IP address they used in public subnets

33
00:02:50,950 --> 00:02:52,480
and there's no charge for them.

34
00:02:52,810 --> 00:02:53,170
Now.

35
00:02:53,170 --> 00:02:58,390
They're actually associated with a private address on the instance and you can't move these addresses

36
00:02:58,390 --> 00:02:59,800
between instances.

37
00:02:59,800 --> 00:03:01,720
We then have the private address.

38
00:03:01,720 --> 00:03:07,570
Every instance, whether it's in a public or a private subnet, will always have at least one private

39
00:03:07,570 --> 00:03:08,560
IP address.

40
00:03:08,590 --> 00:03:14,620
Now these are retained when the instance is stopped and they're used in public and private subnets.

41
00:03:14,650 --> 00:03:20,140
Lastly, we have something called an elastic IP address and there's a bit more flexibility with these.

42
00:03:20,140 --> 00:03:22,810
Now these are also public IP addresses.

43
00:03:22,810 --> 00:03:30,040
The difference between the elastic IP address and the public IP address is that rather than being dynamically

44
00:03:30,040 --> 00:03:36,850
assigned and lost when the instance is stopped, the elastic IP address is static and it isn't lost

45
00:03:36,850 --> 00:03:38,290
when you stop your instance.

46
00:03:38,290 --> 00:03:44,230
So if you want to have a specific public IP address that you can use to connect to your application,

47
00:03:44,230 --> 00:03:48,730
then you would use an elastic IP address so that it doesn't change over time.

48
00:03:48,910 --> 00:03:51,790
Now you are charged if they're not used.

49
00:03:51,790 --> 00:03:57,520
So as long as they're in use, you don't get charged and they're always associated with a private IP

50
00:03:57,520 --> 00:04:00,340
address on the instance, just like the public IP address.

51
00:04:00,520 --> 00:04:06,970
Now another level of flexibility is that you can move them between instances and the network adapters

52
00:04:06,970 --> 00:04:09,250
called Elastic Network adapters.

53
00:04:09,250 --> 00:04:14,710
On the instance, you might want to do that if you need to remap the address to another instance.

54
00:04:14,710 --> 00:04:20,680
In the case of a failure or some other incident, you've learned previously about VPC and subnets.

55
00:04:20,680 --> 00:04:27,850
So remember that public subnets are where we launch our AC two instances and they have either a public

56
00:04:27,850 --> 00:04:30,130
IP address or an elastic IP address.

57
00:04:30,130 --> 00:04:34,330
So in both cases that's an IP address that can be used on the Internet.

58
00:04:34,330 --> 00:04:40,180
So we can connect to the instance from the Internet if we want to, and we can connect out to the to

59
00:04:40,180 --> 00:04:45,820
the Internet via the Internet gateway and in the route table for the public subnet, there's always

60
00:04:45,820 --> 00:04:49,870
a route that goes to the ID of the Internet gateway.

61
00:04:49,900 --> 00:04:55,390
Now, secondly, we've got private subnets, so that's when we're launching our instances and they only

62
00:04:55,390 --> 00:04:57,280
have private IP addresses.

63
00:04:57,400 --> 00:05:04,060
Now if we want to connect our instances in private subnets to the internet, we have to do so of.

64
00:05:04,410 --> 00:05:08,300
Something called a nat gateway, or there's another option called a net instance.

65
00:05:08,300 --> 00:05:10,550
But gateways are the better choice these days.

66
00:05:10,550 --> 00:05:17,570
Usually the Nat Gateway is deployed in the public subnet and the instance can use it to connect to the

67
00:05:17,570 --> 00:05:18,200
internet.

68
00:05:18,560 --> 00:05:24,680
And we can see that a route to the NAT Gateway is added to the private subnet route table and in the

69
00:05:24,680 --> 00:05:30,290
public subnet route table, the Nat Gateway uses the internet gateway to access the internet.

70
00:05:30,830 --> 00:05:37,580
Now this is for outbound traffic only, so it's to enable your EC2 instance to access the internet.

71
00:05:37,580 --> 00:05:41,630
So Nat, by the way, stands for network address translation.

72
00:05:41,630 --> 00:05:47,570
It basically means that when the instance with the private address wants to connect to the Internet,

73
00:05:47,690 --> 00:05:52,550
to connect to the Internet, it will need a public address that can access the Internet.

74
00:05:52,550 --> 00:05:58,310
And so translation happens and that happens within the Nat Gateway, and that allows the Nat Gateway

75
00:05:58,310 --> 00:06:00,830
to forward the connections to the Internet.

