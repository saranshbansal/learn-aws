1
00:00:05,340 --> 00:00:07,460
In this lesson, I'm going to cover what are called

2
00:00:07,470 --> 00:00:13,690
Local Secondary Indexes and Global Secondary Indexes, LSIs and GSIs.

3
00:00:14,240 --> 00:00:16,800
So firstly let's look at the LSIs.

4
00:00:17,500 --> 00:00:21,940
These provide an alternative sort key to use for scans and queries.

5
00:00:22,140 --> 00:00:25,140
You can create up to five LSIs per table.

6
00:00:25,480 --> 00:00:30,110
And they must be created at the creation time for your DynamoDB table.

7
00:00:30,540 --> 00:00:34,250
You cannot add, remove, or modify them later on.

8
00:00:34,510 --> 00:00:38,625
The LSI has the same partition key as your original table,

9
00:00:38,649 --> 00:00:40,590
but it has a different sort key.

10
00:00:40,780 --> 00:00:44,578
So this helps you being able to perform scans and queries

11
00:00:44,602 --> 00:00:47,550
that you can't do in your primary table.

12
00:00:47,786 --> 00:00:50,845
Essentially it gives you a different view of your data

13
00:00:50,869 --> 00:00:53,456
organized by the alternative sort key.

14
00:00:53,940 --> 00:00:58,750
Any queries based on the sort key are much faster using the index

15
00:00:58,870 --> 00:01:00,060
than the main table.

16
00:01:00,540 --> 00:01:02,160
So let's have a look at the diagram.

17
00:01:02,260 --> 00:01:03,791
We have our primary table.

18
00:01:03,963 --> 00:01:05,370
And I'm not showing the attributes.

19
00:01:05,370 --> 00:01:08,470
I'm just showing the partition key and the sort key here.

20
00:01:08,590 --> 00:01:11,660
So we have client ID and then we have created.

21
00:01:12,420 --> 00:01:16,430
Now what we might want to do is create an index from our primary table.

22
00:01:16,570 --> 00:01:19,600
And this LSI has a partition key

23
00:01:19,750 --> 00:01:23,890
and the partition key is always going to be the same, so it's client ID.

24
00:01:24,230 --> 00:01:27,420
But in this case the sort key is the SKU.

25
00:01:27,840 --> 00:01:31,450
Attributes can be optionally projected and that means that

26
00:01:31,450 --> 00:01:34,950
they will be actually put into the LSI as well.

27
00:01:35,270 --> 00:01:37,930
So it really depends what exactly you're searching for.

28
00:01:38,320 --> 00:01:41,350
So remember the sort key is different on the LSI,

29
00:01:41,350 --> 00:01:43,950
but the partition key is always the same.

30
00:01:44,440 --> 00:01:47,540
Now let's have a look at a couple of examples of querying.

31
00:01:47,920 --> 00:01:53,423
So in this example, querying the main table we must use the partition key client ID

32
00:01:53,710 --> 00:01:55,250
and the sort key created.

33
00:01:55,840 --> 00:02:01,105
But in another example with an LSI, we can query the index for any orders made

34
00:02:01,129 --> 00:02:04,430
by a certain user with the SKU

35
00:02:04,440 --> 00:02:09,300
because we can have a different sort key than the main table.

36
00:02:09,490 --> 00:02:11,950
Next we have the Global Secondary Index.

37
00:02:12,040 --> 00:02:16,130
This is used to speed up queries on non-key attributes.

38
00:02:16,410 --> 00:02:18,880
So those are not part of the partition key.

39
00:02:19,280 --> 00:02:22,850
You can create these when you create your table or at any time.

40
00:02:23,340 --> 00:02:27,860
And you can specify a different partition key as well as a different sort key.

41
00:02:28,340 --> 00:02:31,290
It gives a completely different view of the data.

42
00:02:31,440 --> 00:02:36,950
And it speeds up any queries relating to this alternative partition key and sort key.

43
00:02:37,440 --> 00:02:39,490
So again, let's have a look at an example.

44
00:02:39,500 --> 00:02:43,120
We have a primary table here with a partition key or client ID.

45
00:02:43,380 --> 00:02:44,960
And a sort key is created.

46
00:02:45,500 --> 00:02:48,270
The index is created again from the primary table.

47
00:02:48,590 --> 00:02:52,700
And with the GSI, in this case we've got a completely different partition key

48
00:02:52,880 --> 00:02:54,320
and a different sort key.

49
00:02:54,640 --> 00:02:59,990
And again optionally, we can project attributes into the GSI if we wish to.

50
00:03:00,540 --> 00:03:02,770
So let's look at an example. And in this one

51
00:03:02,770 --> 00:03:08,460
we can query the index for orders of the SKU where the quantity is greater than one.

52
00:03:08,550 --> 00:03:12,140
And that's because we have a different partition key and a different sort key.

