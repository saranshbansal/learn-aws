1
00:00:05,170 --> 00:00:08,500
Welcome back. So, this is continuing on from the previous lesson.

2
00:00:08,740 --> 00:00:14,650
And you should have your EC2 instance running and you should be connected to it via SSH. And you also

3
00:00:14,650 --> 00:00:20,080
need an IAM role allowing you permissions to put metric data to Amazon CloudWatch.

4
00:00:20,320 --> 00:00:27,610
Back in Amazon CloudWatch, I'm going to select all alarms under alarms, create alarm, select metric.

5
00:00:28,060 --> 00:00:33,700
I'm going to choose my custom namespace and then drill into the dimension and I'm going to choose the

6
00:00:33,700 --> 00:00:34,870
latency metric.

7
00:00:35,560 --> 00:00:42,280
Let's select that metric. And what I want to do here is under statistic, I'm going to set it to maximum.

8
00:00:42,970 --> 00:00:43,490
Period,

9
00:00:43,870 --> 00:00:50,740
I'm going to set two one minute. And then under whenever latency is greater than, I'm going to enter

10
00:00:50,740 --> 00:00:54,910
my threshold, which I'm going to set as 30. I can then click next.

11
00:00:55,270 --> 00:00:57,040
I'm going to remove the notification.

12
00:00:57,040 --> 00:00:58,480
I don't want a notification

13
00:00:58,660 --> 00:01:07,120
in this example. I'm going to add an EC2 action when the state is in alarm, and what I'm going to

14
00:01:07,120 --> 00:01:08,710
do is terminate the instance.

15
00:01:09,010 --> 00:01:16,030
So what should happen here is if the latency value exceeds 30, then the instance will be automatically

16
00:01:16,030 --> 00:01:18,310
terminated due to the CloudWatch alarm.

17
00:01:19,330 --> 00:01:21,520
So that's all I need to do here. Let's click on next.

18
00:01:21,880 --> 00:01:22,600
Give it a name.

19
00:01:22,930 --> 00:01:28,570
Mine will be called Latency Too High. Click next. And then I'm happy with all the settings here.

20
00:01:28,750 --> 00:01:30,880
So let's scroll down and create the alarm.

21
00:01:31,390 --> 00:01:33,520
So, the alarm has been created. At the moment

22
00:01:33,520 --> 00:01:38,440
it's saying insufficient data because there isn't enough data for it to make a determination.

23
00:01:38,890 --> 00:01:43,810
Now, back in the command line, we have this third command here which is going to trigger the alarm.

24
00:01:44,380 --> 00:01:51,400
I just need to make sure I copy my instance ID from the previous command there and paste it in where

25
00:01:51,400 --> 00:01:52,730
it says instance-ID.

26
00:01:53,290 --> 00:01:58,930
And then I can copy the entire command. And back on the command line here where I'm logged in to my

27
00:01:58,930 --> 00:02:02,170
EC2 instance, I can hit enter. Now

28
00:02:02,170 --> 00:02:08,650
in this case, we are running the PUT metric data for the latency metric and the value is 35,

29
00:02:08,650 --> 00:02:12,160
so it definitely exceeds the threshold of 30.

30
00:02:12,610 --> 00:02:17,680
So let's hit enter there. You can even run it a couple of times if you want to see a little more data.

31
00:02:18,710 --> 00:02:21,170
And now we can just go back and see what happens.

32
00:02:21,320 --> 00:02:26,990
Back in the CloudWatch console, we can see that our Latency Too High alarm is in the alarm state.

33
00:02:27,230 --> 00:02:33,260
So what should happen now is our EC2 instance should be terminated automatically. Back in EC2,

34
00:02:33,260 --> 00:02:34,640
let's refresh the page here.

35
00:02:35,150 --> 00:02:36,890
And sure enough, it's been terminated.

36
00:02:37,340 --> 00:02:40,250
So, that's it for this lesson. And there's nothing to clean up.

37
00:02:40,250 --> 00:02:41,360
It's all been done for us.

38
00:02:41,600 --> 00:02:42,650
I'll see you in the next lesson.

