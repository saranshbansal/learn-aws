1
00:00:05,540 --> 00:00:09,470
In this lesson, I'm going to cover task placement strategies for ECS.

2
00:00:09,770 --> 00:00:12,070
So what is a task placement strategy?

3
00:00:12,270 --> 00:00:15,560
Well, it's an algorithm for selecting the instances

4
00:00:15,570 --> 00:00:18,350
for task placement or task termination.

5
00:00:19,440 --> 00:00:22,290
Task placement strategies can be used when either

6
00:00:22,290 --> 00:00:25,430
running a task or creating a new service.

7
00:00:26,150 --> 00:00:29,360
And this is relevant only to the EC2 launch type.

8
00:00:30,240 --> 00:00:34,950
ECS supports multiple strategies you can use for task placement.

9
00:00:35,440 --> 00:00:37,150
Firstly, we've got binpack.

10
00:00:37,380 --> 00:00:42,760
This places tasks based on the least available amount of CPU or memory.

11
00:00:43,140 --> 00:00:46,750
And that will minimize the number of instances in use.

12
00:00:47,640 --> 00:00:49,880
Next, we have random. That just places the

13
00:00:49,880 --> 00:00:53,360
tasks randomly across the instances that are available.

14
00:00:53,940 --> 00:00:59,250
We have spread, that places tasks evenly based on a specified value.

15
00:00:59,890 --> 00:01:03,160
Accepted values are instance ID or host.

16
00:01:03,185 --> 00:01:04,849
And they actually have the same effect.

17
00:01:05,540 --> 00:01:10,380
Or any platform or custom attribute that's applied to a container instance,

18
00:01:10,540 --> 00:01:14,400
such as attribute ECS.availability zone.

19
00:01:14,670 --> 00:01:17,710
So that means you can use this variable to spread

20
00:01:17,900 --> 00:01:21,650
the tasks across availability zones evenly.

21
00:01:22,340 --> 00:01:26,280
Service tasks are spread based on the tasks from that service.

22
00:01:26,590 --> 00:01:31,060
Standalone tasks are spread based on the tasks from the same task group.

23
00:01:31,940 --> 00:01:33,160
So how does this look?

24
00:01:33,160 --> 00:01:35,710
Well, the following strategy would distribute the

25
00:01:35,710 --> 00:01:38,960
tasks evenly across availability zones.

26
00:01:40,340 --> 00:01:43,490
So this is how we can define it. We've got the placement strategy

27
00:01:43,800 --> 00:01:48,950
and we've defined a field of attribute ECS.availability zone

28
00:01:49,100 --> 00:01:50,960
and the type is spread.

29
00:01:51,520 --> 00:01:56,220
The following strategy will distribute tasks evenly across all instances.

30
00:01:56,740 --> 00:02:01,360
So here we just have the field instance ID and the type has spread.

31
00:02:02,140 --> 00:02:07,560
In another example, the strategy will binpack the tasks based on memory.

32
00:02:07,940 --> 00:02:11,960
So now the field is defined as memory and the type is binpack.

33
00:02:12,440 --> 00:02:14,410
You can also combine strategies.

34
00:02:14,410 --> 00:02:18,990
So this example will distribute tasks evenly across availability zone

35
00:02:19,200 --> 00:02:23,750
and then bin packs tasks based on memory within each availability zone.

36
00:02:24,080 --> 00:02:27,500
So now we have multiple strategies at the same time.

37
00:02:27,680 --> 00:02:33,060
We got the spread across availability zones and then binpack based on memory.

38
00:02:33,640 --> 00:02:35,850
We then have task placement constraints.

39
00:02:35,940 --> 00:02:38,860
These are rules that are considered during task placement.

40
00:02:39,340 --> 00:02:41,690
We've got distinct instance, where it will

41
00:02:41,690 --> 00:02:44,910
place each task on a different container instance.

42
00:02:45,270 --> 00:02:46,640
And then we've got membersof

43
00:02:46,750 --> 00:02:51,550
which places tasks on container instances that satisfy and expression.

44
00:02:52,240 --> 00:02:54,270
Another thing you need to know for the exam is

45
00:02:54,270 --> 00:02:56,950
the cluster query language, at least what it is.

46
00:02:57,440 --> 00:03:02,020
So cluster queries are expressions that enable you to group objects.

47
00:03:02,370 --> 00:03:03,880
So for example you can group

48
00:03:03,880 --> 00:03:07,480
container instances by attributes like availability zone,

49
00:03:07,640 --> 00:03:10,550
instance type, or some custom metadata.

50
00:03:11,140 --> 00:03:15,960
Expressions have this syntax, subject, operator and then argument.

51
00:03:16,640 --> 00:03:18,350
So let's have a look at an example.

52
00:03:18,930 --> 00:03:23,360
This expression selects instances with the specified instance type.

53
00:03:23,740 --> 00:03:27,550
So we specify instance type and in this case t2 small.

54
00:03:28,240 --> 00:03:31,660
In another example, this expression selects instances in the

55
00:03:31,660 --> 00:03:35,650
us-east-1A or 1B availability zones.

56
00:03:36,240 --> 00:03:39,110
So we specify availability zone in

57
00:03:39,280 --> 00:03:43,160
and then we have the specific availability zones in question.

58
00:03:43,640 --> 00:03:48,130
In another example this expression selects instances that are hosting tasks

59
00:03:48,270 --> 00:03:50,625
in the service production group.

60
00:03:50,649 --> 00:03:53,300
So we're looking for a specific group in this case.

61
00:03:53,740 --> 00:03:55,090
Now that's it for this lesson.

62
00:03:55,270 --> 00:03:57,620
Now, I'm quite sure you will see some questions

63
00:03:57,630 --> 00:04:00,170
about the task placement strategies on the exam.

64
00:04:00,170 --> 00:04:02,696
So make sure you fully understand those.

65
00:04:02,721 --> 00:04:06,860
Cluster query language can occasionally come up as can constraints.

66
00:04:06,910 --> 00:04:11,158
But the task placement strategies are 100% gonna come up in the exam.

67
00:04:11,183 --> 00:04:13,660
So make sure you understand them fully and you'll be good.

