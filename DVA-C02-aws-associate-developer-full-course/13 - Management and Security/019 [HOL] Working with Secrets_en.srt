1
00:00:05,340 --> 00:00:06,920
Welcome to this hands-on lesson.

2
00:00:07,090 --> 00:00:10,520
In this lesson, we're going to go into AWS Secrets Manager,

3
00:00:10,530 --> 00:00:12,430
have a look at the console,

4
00:00:12,440 --> 00:00:15,660
create a secret and then we're going to go to the command line

5
00:00:15,660 --> 00:00:19,390
as well and see how we can work with Secrets Manager using the CLI.

6
00:00:19,730 --> 00:00:22,030
So I'm on the Secrets Manager console here.

7
00:00:22,210 --> 00:00:24,450
Let's click on store a new secret.

8
00:00:25,140 --> 00:00:29,580
And straight away we have a few decisions to make. So what's the secret type?

9
00:00:29,590 --> 00:00:34,251
Is it going to be credentials for an RDS database, DocumentDB,

10
00:00:34,276 --> 00:00:39,640
a Redshift cluster, or some other type of database or any other type of secret,

11
00:00:39,640 --> 00:00:42,960
like an API key and an OAuth token and so on.

12
00:00:43,540 --> 00:00:44,890
Now, if you do choose

13
00:00:45,010 --> 00:00:48,070
the RDS database, you do actually need to have a database.

14
00:00:48,260 --> 00:00:49,230
And we don't have one.

15
00:00:49,640 --> 00:00:52,760
So what we're going to do is choose other type of secrets.

16
00:00:53,240 --> 00:00:57,270
And we're simply going to create our secret as a key value pair.

17
00:00:57,310 --> 00:01:02,730
So for example, maybe it's a password for our administrative account.

18
00:01:02,790 --> 00:01:04,790
So I'm going to put in admin

19
00:01:05,090 --> 00:01:07,840
and then I'm just going to say my password.

20
00:01:08,120 --> 00:01:10,970
Now, as you can see it's going to use an encryption key

21
00:01:10,980 --> 00:01:14,660
and by default it's going to use an AWS Managed Key.

22
00:01:14,740 --> 00:01:19,360
So you know that because it says AWS/ and then Secrets Manager.

23
00:01:20,040 --> 00:01:22,500
So you can choose other keys if you want to

24
00:01:22,500 --> 00:01:27,070
as long as Secrets Manager does have the permissions to use that key.

25
00:01:27,110 --> 00:01:29,660
I'm going to use the default key here

26
00:01:30,040 --> 00:01:31,200
and click on next.

27
00:01:31,640 --> 00:01:32,680
Just give it a name.

28
00:01:33,030 --> 00:01:34,850
I'm just going to call this My Credentials.

29
00:01:35,240 --> 00:01:37,290
You can then optionally add tags,

30
00:01:37,740 --> 00:01:41,170
you can edit the resource permissions and you can choose

31
00:01:41,170 --> 00:01:43,400
to replicate your secret if you want to as well.

32
00:01:43,840 --> 00:01:45,670
We'll click on next, and this is where

33
00:01:45,670 --> 00:01:48,820
we have the configuration for automatic rotation.

34
00:01:48,820 --> 00:01:52,640
So remember Secrets Manager does do automatic rotation

35
00:01:52,840 --> 00:01:56,260
but it's only going to work out of the box for certain databases.

36
00:01:56,740 --> 00:02:01,150
So if I enable automatic rotation here for my custom secret,

37
00:02:01,640 --> 00:02:03,225
I'm going to need to choose

38
00:02:03,249 --> 00:02:06,310
a Lambda rotation function, and of course I don't have one.

39
00:02:06,500 --> 00:02:08,690
I would need to write my own Lambda code

40
00:02:08,870 --> 00:02:10,310
that rotates the secret.

41
00:02:10,840 --> 00:02:13,125
So I'm just going to disable rotation.

42
00:02:13,149 --> 00:02:14,050
Click on next.

43
00:02:14,540 --> 00:02:15,350
Scroll down.

44
00:02:15,940 --> 00:02:20,180
And we can see some sample code here for using our secret in an application.

45
00:02:20,470 --> 00:02:21,850
And I'm just going to choose store.

46
00:02:22,430 --> 00:02:27,860
And it's as simple as that. We now have our secret stored in AWS Secrets Manager.

47
00:02:29,130 --> 00:02:31,830
Now if we come in here we can see some information,

48
00:02:31,830 --> 00:02:35,960
the encryption key that's being used, the name, it has its own ARN.

49
00:02:36,610 --> 00:02:39,660
And we can retrieve the secret value if we wish to as well.

50
00:02:40,540 --> 00:02:44,430
So of course you've got to be careful who has permissions to view this information.

51
00:02:45,340 --> 00:02:49,140
Now, that's it for the console. What I want to do now is go to the command line

52
00:02:49,330 --> 00:02:51,660
and we're going to see how we can work with the command line.

53
00:02:52,040 --> 00:02:54,350
Now, you'll find this file in the course, downloads.

54
00:02:54,360 --> 00:02:56,180
Obviously it's in the code directory,

55
00:02:56,430 --> 00:03:00,160
AWS Secrets Manager and it's called Secrets Manager CLI commands.

56
00:03:00,540 --> 00:03:02,810
And these are the commands that we're going to use.

57
00:03:03,340 --> 00:03:07,120
So I'm simply going to copy the command one by one to my clipboard.

58
00:03:07,400 --> 00:03:12,480
And on the command line here I'm going to type in AWS Secrets Manager list secrets.

59
00:03:13,040 --> 00:03:16,820
And of course we did create a secret before so we can see the ARN,

60
00:03:17,060 --> 00:03:20,480
the name of that secret, the last change date, access date,

61
00:03:20,780 --> 00:03:21,910
and some more information.

62
00:03:22,220 --> 00:03:25,000
So let's quit out of there and go and see what the next command is.

63
00:03:25,640 --> 00:03:28,460
So the next command is to actually create a secret.

64
00:03:28,460 --> 00:03:32,210
So we're going to run AWS Secrets Manager, create secret,

65
00:03:32,360 --> 00:03:35,280
we give it a name, it's going to be called deV DB secret.

66
00:03:35,550 --> 00:03:37,280
And then we can give it a description

67
00:03:37,390 --> 00:03:39,091
and then the actual secret string.

68
00:03:39,115 --> 00:03:41,900
So this is the actual secret we're trying to store.

69
00:03:42,440 --> 00:03:45,050
So I'm going to copy all of this to my clipboard

70
00:03:45,540 --> 00:03:46,950
and back on the command line,

71
00:03:47,340 --> 00:03:49,090
let's hit enter.

72
00:03:49,410 --> 00:03:51,530
And that should have created the secret for us.

73
00:03:51,870 --> 00:03:55,580
So now if I go back up to my previous command to list secrets,

74
00:03:55,940 --> 00:04:00,650
I can now see that I have two, so I have my credentials and dev DB secret.

75
00:04:00,980 --> 00:04:05,090
Now what if I actually want to retrieve the secret value from the command line?

76
00:04:05,090 --> 00:04:09,730
Well, I can do that with the Secrets Manager get secret value command.

77
00:04:09,990 --> 00:04:12,070
And again we just need to identify

78
00:04:12,230 --> 00:04:15,970
the secret by ID which is actually the name of the secret.

79
00:04:16,300 --> 00:04:18,459
So back in the command line let's put that in,

80
00:04:19,140 --> 00:04:21,970
and it actually retrieves the secret string and we can

81
00:04:21,970 --> 00:04:24,600
see it in plain text here on the screen.

82
00:04:24,790 --> 00:04:28,010
Another command you can use is described secret.

83
00:04:28,340 --> 00:04:30,060
So let's copy this to our clipboards,

84
00:04:31,440 --> 00:04:32,960
paste that one in and hit enter.

85
00:04:33,640 --> 00:04:36,010
Now, what you'll notice is this provides quite a bit of

86
00:04:36,010 --> 00:04:39,190
information but it doesn't actually retrieve the secret value.

87
00:04:39,190 --> 00:04:41,930
So this is useful when you want to know information

88
00:04:41,930 --> 00:04:44,650
about the secret but not the actual secret itself.

89
00:04:45,040 --> 00:04:47,460
The next command is to update the secret.

90
00:04:47,940 --> 00:04:50,580
So we can run this command and what's going to happen

91
00:04:50,580 --> 00:04:53,020
is it's going to change the secret value that's stored.

92
00:04:53,020 --> 00:04:55,610
So if you needed to rotate your secret,

93
00:04:55,800 --> 00:04:58,400
this is a way that you could do that using the CLI.

94
00:04:58,680 --> 00:05:00,660
Of course, you'd be able to use the API

95
00:05:00,660 --> 00:05:04,260
and there will be a very similar option for how you can update

96
00:05:04,440 --> 00:05:08,250
the secret using the API that you could then put into a Lambda function code

97
00:05:08,440 --> 00:05:09,960
to actually perform that for you.

98
00:05:10,540 --> 00:05:12,478
So here we are running update secret.

99
00:05:12,502 --> 00:05:16,960
We give it the secret ID, the name of the secret and then the new secret string.

100
00:05:17,440 --> 00:05:19,560
So I pasted that onto my screen.

101
00:05:20,440 --> 00:05:24,290
That has now applied the new secret.

102
00:05:24,410 --> 00:05:27,060
So let's run the get secret value command again.

103
00:05:28,410 --> 00:05:31,690
And we should now see that we have the new secret string returned.

104
00:05:32,340 --> 00:05:33,560
So that's it for this lesson.

105
00:05:33,560 --> 00:05:37,080
I just wanted to show you how to use Secrets Manager from the CLI.

106
00:05:37,180 --> 00:05:41,508
Of course, in many instances you'll be using the API in code

107
00:05:41,532 --> 00:05:43,460
to actually work with Secrets Manager.

108
00:05:43,940 --> 00:05:46,710
Now the last thing I'm going to do here is delete my secrets.

109
00:05:46,920 --> 00:05:49,170
The first one is the DEV DB secret.

110
00:05:49,350 --> 00:05:51,560
So I'm going to copy this command to my clipboard,

111
00:05:52,940 --> 00:05:54,860
paste that in and that will be deleted.

112
00:05:56,040 --> 00:05:58,290
And then I'm simply going to go back and delete

113
00:05:58,460 --> 00:05:59,890
my credentials as well.

114
00:06:00,526 --> 00:06:02,566
And that's both of my secrets deleted.

115
00:06:03,240 --> 00:06:05,710
So I hope that was useful. I will see you in the next lesson.

