1
00:00:05,340 --> 00:00:09,720
Hi guys and welcome back to the part four of the ec.

2
00:00:09,720 --> 00:00:12,810
S labs that we started in the previous section.

3
00:00:12,870 --> 00:00:15,130
So make sure that you've done part one,

4
00:00:15,130 --> 00:00:20,160
Part two and part three and that you have all of the resources we created running

5
00:00:20,540 --> 00:00:23,240
and then we can continue in this lesson.

6
00:00:23,370 --> 00:00:28,520
So what we've done so far is we created an elastic container registry repository.

7
00:00:28,530 --> 00:00:32,140
We uploaded an image of engine X to that repository.

8
00:00:32,150 --> 00:00:34,930
We then created a task definition that referenced the

9
00:00:34,930 --> 00:00:38,450
image in the repository and an application load balancer.

10
00:00:38,540 --> 00:00:42,810
And then we created a Fargate cluster and a service and that service

11
00:00:42,810 --> 00:00:47,150
used the task definition that pointed to the image in the repository.

12
00:00:47,540 --> 00:00:49,900
So all of that should be running now you should have an

13
00:00:49,900 --> 00:00:54,150
application load balancer that if you connect to the DNS name,

14
00:00:54,160 --> 00:00:57,760
it should connect you to an engine X web page.

15
00:00:57,770 --> 00:01:00,020
So in this lesson we're going to create a

16
00:01:00,020 --> 00:01:04,849
code deploy application and a pipeline in codepipeline.

17
00:01:05,040 --> 00:01:07,860
We'll also have a codecommit repository as well.

18
00:01:08,640 --> 00:01:12,240
So our configuration so far looks something like this

19
00:01:12,840 --> 00:01:15,200
with the Fargate cluster, the CS service,

20
00:01:15,410 --> 00:01:17,320
the CCR registry.

21
00:01:17,330 --> 00:01:23,550
The task definition that references the image and we've got an A L B with a primary

22
00:01:23,570 --> 00:01:26,190
target group and listener which is poured 80 and

23
00:01:26,190 --> 00:01:28,420
target group one at this point in time.

24
00:01:28,580 --> 00:01:32,460
And then we've got 80 80 which is our secondary test listener.

25
00:01:32,640 --> 00:01:34,050
We have target group too

26
00:01:34,340 --> 00:01:38,150
And we've got a task running in Target Group one at this point in time.

27
00:01:39,040 --> 00:01:41,650
So now we're going to create the codecommit repository.

28
00:01:41,770 --> 00:01:44,860
It's gonna have these two files. The aspect dot Yeah mo

29
00:01:45,130 --> 00:01:46,870
And the task def dot Jason.

30
00:01:47,440 --> 00:01:51,080
Then we're going to create a codepipeline so that it uses

31
00:01:51,190 --> 00:01:52,860
the codecommit repository

32
00:01:53,240 --> 00:01:56,150
and pushes the code through the pipeline to code deploy.

33
00:01:56,540 --> 00:02:00,470
Codedeploy is going to speak to e c s and the A L B

34
00:02:00,650 --> 00:02:02,960
and it will swap the listener

35
00:02:03,840 --> 00:02:08,160
to the target group too. So this is the blue green deployment.

36
00:02:08,740 --> 00:02:10,860
So we'll see that in action in a moment.

37
00:02:11,640 --> 00:02:16,370
Now, back in our instructions were now here in part four. There's quite a lot to do.

38
00:02:16,380 --> 00:02:18,420
Lots of instructions in here and I'm going to do

39
00:02:18,420 --> 00:02:20,850
all this through the console in the command line.

40
00:02:21,440 --> 00:02:25,270
So the first thing to do is create a codecommit repository called

41
00:02:26,120 --> 00:02:28,400
Lab. So let's copy that to our clipboards

42
00:02:28,550 --> 00:02:30,260
and go over to codecommit.

43
00:02:31,440 --> 00:02:33,060
So here we are in codecommit,

44
00:02:33,280 --> 00:02:36,450
I'm going to create a new repository, give it the name

45
00:02:37,240 --> 00:02:38,350
and then just create,

46
00:02:38,840 --> 00:02:41,950
we now want to clone the repository. So I'm going to copy

47
00:02:42,540 --> 00:02:45,660
the Git clone command and go back to a command line

48
00:02:47,530 --> 00:02:49,260
and I'm just going to paste that in here.

49
00:02:49,740 --> 00:02:53,900
So it's going to clone into e CS lab. It is an empty repository.

50
00:02:53,900 --> 00:02:58,950
That's okay if I change into pcs lab here, we are in the Git Master.

51
00:02:59,840 --> 00:03:03,070
Next we want to edit the task def dot Jason file.

52
00:03:03,410 --> 00:03:08,960
So that file is this one here in the code directory. Tcs Task def dot Jason.

53
00:03:09,440 --> 00:03:15,160
And what we need to do, remember this is actually using the task execution role A R N

54
00:03:15,640 --> 00:03:19,500
and it has an engine. X. Image. Okay.

55
00:03:19,510 --> 00:03:28,040
So what we're going to do now is we're going to update the image name to image one.

56
00:03:28,040 --> 00:03:29,430
This is a placeholder

57
00:03:29,620 --> 00:03:32,260
that's going to be updated by codedeploy.

58
00:03:32,940 --> 00:03:34,430
So we literally just come in

59
00:03:34,800 --> 00:03:35,990
and replace

60
00:03:37,040 --> 00:03:38,140
the image name with

61
00:03:38,840 --> 00:03:42,390
image underscore name with the with the arrows either side to make sure

62
00:03:42,390 --> 00:03:46,850
it's exactly like this with the quotation marks either side as well.

63
00:03:47,440 --> 00:03:49,600
We're then going to save a copy of this

64
00:03:50,070 --> 00:03:51,660
in our repository.

65
00:03:52,040 --> 00:03:56,630
So the way we're going to do that, I'm gonna just go to the command line

66
00:03:56,820 --> 00:03:58,360
and what I'm gonna do is copy

67
00:03:59,240 --> 00:04:00,560
the file.

68
00:04:01,340 --> 00:04:02,770
Task F dot Jason

69
00:04:03,130 --> 00:04:04,160
into this folder.

70
00:04:05,340 --> 00:04:10,090
So now we've got task def dot Jason in the folder so you can do that through the,

71
00:04:10,100 --> 00:04:12,740
you know, through your file Explorer, however you want to do it.

72
00:04:12,740 --> 00:04:17,660
But just copy that fall into your Git Master branch like this.

73
00:04:18,140 --> 00:04:21,370
There's also a far called app spec dot Yamil.

74
00:04:21,380 --> 00:04:26,240
So again, that will be in your code pcs directory. Now don't change anything here.

75
00:04:26,390 --> 00:04:29,490
The task definition is again a placeholder and

76
00:04:29,490 --> 00:04:32,410
that will be updated when the pipeline runs.

77
00:04:32,410 --> 00:04:33,760
So we don't want to change that.

78
00:04:34,440 --> 00:04:36,480
So I'm gonna go back to my command line

79
00:04:36,680 --> 00:04:38,120
and run cp

80
00:04:38,840 --> 00:04:40,130
and this is in the

81
00:04:40,270 --> 00:04:41,360
directory above

82
00:04:41,940 --> 00:04:43,350
and I'm just gonna copy that here.

83
00:04:43,630 --> 00:04:45,950
So I should now have both of these files

84
00:04:46,200 --> 00:04:47,260
in my

85
00:04:48,040 --> 00:04:50,780
repository branch here. So I'm going to run get

86
00:04:51,340 --> 00:04:52,750
at dash a

87
00:04:53,940 --> 00:04:55,360
and then going to run GIT commit

88
00:04:55,840 --> 00:04:56,950
and give it a message

89
00:04:57,440 --> 00:04:59,140
and then I'm gonna run GIT push

90
00:04:59,740 --> 00:05:04,050
so that should push those objects up into our repository.

91
00:05:04,070 --> 00:05:10,510
So back here in codecommit, if we click on code we should now see our app spec dot Yamil

92
00:05:10,610 --> 00:05:14,130
and our task def dot Jason files so you can view those,

93
00:05:14,130 --> 00:05:18,960
make sure yours has got this image name and your aspect dot Yamil

94
00:05:19,240 --> 00:05:19,960
should

95
00:05:20,210 --> 00:05:21,020
look like this.

96
00:05:21,020 --> 00:05:24,460
Remember with task definition should look exactly like this, nothing changed.

97
00:05:24,840 --> 00:05:28,080
We're now going to go to I am and we need to create a role

98
00:05:28,380 --> 00:05:31,440
and this role is going to be used by codedeploy

99
00:05:32,140 --> 00:05:34,960
So let's go into I am go to roles.

100
00:05:35,740 --> 00:05:36,760
Create role.

101
00:05:37,650 --> 00:05:42,360
The use case needs to be codedeploy so I'm just gonna scroll down, choose codedeploy

102
00:05:43,040 --> 00:05:46,080
and then codedeploy dash E C s

103
00:05:47,140 --> 00:05:48,160
click on next

104
00:05:48,940 --> 00:05:52,650
for policies we can see it has the AWS code deploy role for

105
00:05:52,930 --> 00:05:54,410
selected by default

106
00:05:54,560 --> 00:05:56,560
that gives us all the permissions we need

107
00:05:57,140 --> 00:05:58,300
let's click on next

108
00:05:58,650 --> 00:06:00,060
let's give it a role name,

109
00:06:00,440 --> 00:06:04,960
you can find this name in the file and the instructions codedeploy E C s role

110
00:06:05,820 --> 00:06:07,320
and that's all we need to do.

111
00:06:07,510 --> 00:06:08,960
So let's create the role.

112
00:06:09,440 --> 00:06:13,190
We can now go and create our application

113
00:06:13,310 --> 00:06:14,450
In codedeploy

114
00:06:14,940 --> 00:06:19,670
So back in the developer tools here, let's go down to codedeploy.

115
00:06:19,750 --> 00:06:21,240
Let's go to applications,

116
00:06:21,600 --> 00:06:24,450
we don't have any at the moment. So let's create an application.

117
00:06:25,140 --> 00:06:27,000
I'm gonna call this one pcs

118
00:06:27,360 --> 00:06:30,960
lab, you should use the same naming convention as me.

119
00:06:31,740 --> 00:06:32,940
We're going to choose

120
00:06:33,070 --> 00:06:37,860
amazon ec s as the compute platform and then choose create application,

121
00:06:38,430 --> 00:06:43,050
then we can create our deployment group. So just choose create deployment group.

122
00:06:44,040 --> 00:06:45,150
This will be called

123
00:06:46,340 --> 00:06:48,090
codedeploy dash E C s

124
00:06:49,100 --> 00:06:53,750
for the service role. We can choose Codedeploy E CS role that we created previously.

125
00:06:54,230 --> 00:06:55,870
The vcs cluster name,

126
00:06:55,970 --> 00:06:57,490
choose my e CS

127
00:06:57,620 --> 00:06:58,760
lab cluster

128
00:06:59,640 --> 00:07:02,640
for service name. It should then be my service

129
00:07:03,310 --> 00:07:07,460
then for low balances. We're going to choose my e C S A L B,

130
00:07:07,840 --> 00:07:11,260
We're gonna select the production, this Nepal, which is 80

131
00:07:11,640 --> 00:07:14,550
And then we've got our test listener port which is 80, 80

132
00:07:15,340 --> 00:07:17,170
And we've got target group one

133
00:07:17,370 --> 00:07:19,260
and target group too.

134
00:07:20,240 --> 00:07:21,950
So that's the configuration there.

135
00:07:22,440 --> 00:07:26,360
We're going to leave traffic rerouting on reroute traffic immediately

136
00:07:26,940 --> 00:07:30,120
And you can reduce this if you want. So it takes

137
00:07:30,270 --> 00:07:34,320
an hour before the original revision is terminated.

138
00:07:34,320 --> 00:07:37,270
That can be quite a long time if you want to sort of

139
00:07:37,270 --> 00:07:40,410
hurry things up and get on with it and run some more tests.

140
00:07:40,450 --> 00:07:42,960
So I'm gonna just drop mine down to 15 minutes

141
00:07:43,840 --> 00:07:46,060
and then let's create our deployment group.

142
00:07:46,630 --> 00:07:50,510
Next under Codepipeline, we're going to create our pipeline.

143
00:07:50,510 --> 00:07:52,560
So let's click create pipeline,

144
00:07:53,240 --> 00:07:58,540
it's going to be called my image pipeline. You can create a new service role.

145
00:07:58,550 --> 00:08:02,920
I've created one with this name before so I can actually select the one I created.

146
00:08:03,140 --> 00:08:06,050
But you can allow code pipeline to create it for you.

147
00:08:06,510 --> 00:08:10,220
Let's click on next the source provider, it's going to be codecommit.

148
00:08:10,450 --> 00:08:12,560
I'm gonna select my ec. S lab,

149
00:08:12,820 --> 00:08:14,150
my master branch,

150
00:08:14,340 --> 00:08:15,330
click on next,

151
00:08:15,690 --> 00:08:17,360
skip the build stage,

152
00:08:17,830 --> 00:08:18,360
skip.

153
00:08:19,040 --> 00:08:20,660
And then for deployed provider,

154
00:08:20,780 --> 00:08:22,620
what we want to choose is amazon ec?

155
00:08:22,620 --> 00:08:25,760
S blue green, make sure it's the blue green option.

156
00:08:26,640 --> 00:08:31,460
We're then going to select pcs lab as the codedeploy application

157
00:08:32,130 --> 00:08:33,960
and then the deployment group

158
00:08:34,340 --> 00:08:36,679
for source artifact.

159
00:08:36,970 --> 00:08:39,080
It will be task def dot Jason.

160
00:08:39,380 --> 00:08:41,558
So I've typed in task def dot Jason

161
00:08:41,940 --> 00:08:44,410
for source out artifact here.

162
00:08:44,640 --> 00:08:47,660
We want to choose aspect dot Yeah, most to type that in.

163
00:08:48,240 --> 00:08:50,430
We can then click on next

164
00:08:51,620 --> 00:08:54,450
scroll down and create our pipeline.

165
00:08:55,040 --> 00:08:58,610
We now need to make some changes. So what we're gonna do is edit

166
00:08:58,810 --> 00:09:00,050
the pipeline here,

167
00:09:00,540 --> 00:09:03,110
click on edit stage next to source,

168
00:09:03,540 --> 00:09:05,020
click add action.

169
00:09:05,360 --> 00:09:07,260
We're going to call this image.

170
00:09:07,640 --> 00:09:11,990
And then for action provider we're going to scroll down to source and choose amazon.

171
00:09:12,000 --> 00:09:15,950
Ec. Are we're gonna give it the repository name, engine X

172
00:09:16,340 --> 00:09:18,990
and for image tag. In fact we leave that one

173
00:09:19,200 --> 00:09:21,560
as as unpopulated there

174
00:09:22,040 --> 00:09:24,340
and under output artifacts.

175
00:09:24,440 --> 00:09:26,350
We want to type my

176
00:09:26,460 --> 00:09:27,050
image

177
00:09:28,540 --> 00:09:29,860
just as you see it there.

178
00:09:30,640 --> 00:09:31,960
Then we can click on done

179
00:09:33,240 --> 00:09:34,260
and save

180
00:09:35,040 --> 00:09:36,060
and save again.

181
00:09:37,210 --> 00:09:40,450
Now we do want to go back in now and make another edit to the deploy.

182
00:09:40,450 --> 00:09:43,760
Don't worry if it's failed. That's okay. We're going to click on edit

183
00:09:44,240 --> 00:09:46,240
well then click on edit stage

184
00:09:46,400 --> 00:09:50,450
and will choose this option to edit the existing action

185
00:09:51,300 --> 00:09:53,900
under input artifacts. We want to click on add

186
00:09:54,740 --> 00:09:57,160
and they will want to choose my image

187
00:09:57,540 --> 00:09:58,650
scroll down now

188
00:09:59,440 --> 00:10:04,360
to where it says sought artifact. Make sure that task def dot Jason has entered

189
00:10:04,840 --> 00:10:08,260
and under the next one aspect dot Yamil should be entered

190
00:10:09,140 --> 00:10:11,750
in dynamically update task definition,

191
00:10:12,440 --> 00:10:14,260
choose my image.

192
00:10:14,740 --> 00:10:16,450
So now we select my image

193
00:10:17,440 --> 00:10:19,560
and then enter the placeholder text

194
00:10:19,940 --> 00:10:22,550
that we put into the task def dot Jason.

195
00:10:23,240 --> 00:10:27,050
So what we used was image 1 _ name.

196
00:10:27,640 --> 00:10:29,390
Now we can click on done

197
00:10:30,150 --> 00:10:31,160
and save

198
00:10:31,540 --> 00:10:32,530
and save again.

199
00:10:32,730 --> 00:10:35,860
What we can do now is click on release change

200
00:10:36,240 --> 00:10:37,700
and then release

201
00:10:38,140 --> 00:10:40,450
to get the pipeline to actually run.

202
00:10:41,240 --> 00:10:43,360
So let's see what happens. We can see

203
00:10:43,740 --> 00:10:44,870
that were

204
00:10:44,980 --> 00:10:48,490
in progress now for pulling some changes from codecommit

205
00:10:49,540 --> 00:10:52,120
and let's just give this a couple of minutes and see what happens.

206
00:10:52,740 --> 00:10:57,250
So now we've gone to the deploy stage so this is in progress

207
00:10:57,260 --> 00:11:01,860
and you can actually view the details here so I'm gonna click details,

208
00:11:02,640 --> 00:11:05,760
we can see that we're deploying a replacement task set

209
00:11:06,740 --> 00:11:09,420
so we can watch this, it's gonna take a few minutes.

210
00:11:09,440 --> 00:11:11,790
What you might want to do is go over to EC

211
00:11:11,790 --> 00:11:13,760
two as well and have a look at your load balancer.

212
00:11:13,760 --> 00:11:16,550
We're gonna watch as the configuration is updated.

213
00:11:17,440 --> 00:11:19,770
So a few minutes have passed for me and we can see that we've

214
00:11:19,770 --> 00:11:25,030
now gone to 100% of the traffic being served by the replacement task set.

215
00:11:25,040 --> 00:11:29,770
We've gone through step two and step three. So if I now go to ec two

216
00:11:30,060 --> 00:11:33,460
and let's refresh this page. Now of course what we had was

217
00:11:33,640 --> 00:11:37,660
Port 80 is the primary listener on Target Group one. Let's refresh this page

218
00:11:38,240 --> 00:11:40,880
and now you can see that target Group two is

219
00:11:40,880 --> 00:11:42,830
and we're in the process of having this updated.

220
00:11:42,830 --> 00:11:46,550
So target Group One should be associated soon with the test listener,

221
00:11:47,040 --> 00:11:50,270
but now we're forwarding traffic to Target Group Two

222
00:11:50,280 --> 00:11:54,150
for any applications that connect to our load balancer.

223
00:11:54,740 --> 00:11:58,690
The next thing that will happen is step forward to wait for 15 minutes

224
00:11:58,840 --> 00:12:02,450
and then it will terminate the original task set.

225
00:12:03,240 --> 00:12:07,990
Now you can wait for the 15 minutes to happen or you can actually stop and roll back.

226
00:12:07,990 --> 00:12:10,000
We've kind of proven what's happening here.

227
00:12:10,010 --> 00:12:13,000
Now I don't want to wait because I want to get on to the next

228
00:12:13,000 --> 00:12:17,340
lesson where I'm going to show you how to make changes to your source image.

229
00:12:17,350 --> 00:12:19,860
So I'm just gonna choose stop and roll back

230
00:12:20,310 --> 00:12:23,060
and that's really fast. It's quite a quick process.

231
00:12:23,100 --> 00:12:25,360
We can watch this happening in real time.

232
00:12:26,040 --> 00:12:27,870
You can see we now have the rollback

233
00:12:27,870 --> 00:12:32,360
status in progress and we're gonna roll everything back

234
00:12:32,740 --> 00:12:35,180
and this usually happens within a couple of minutes.

235
00:12:35,640 --> 00:12:36,800
So that's really fast.

236
00:12:36,800 --> 00:12:40,020
That's why it's really easy to roll back with a blue green update.

237
00:12:40,020 --> 00:12:43,220
If I now refresh, we can see we're back to normal,

238
00:12:43,220 --> 00:12:46,950
we're back to where we started from with our traffic going to target group one.

239
00:12:47,440 --> 00:12:49,900
So that's it for this lesson. Leave everything running.

240
00:12:49,910 --> 00:12:53,560
We're going to do another blue green update in the next lesson.

