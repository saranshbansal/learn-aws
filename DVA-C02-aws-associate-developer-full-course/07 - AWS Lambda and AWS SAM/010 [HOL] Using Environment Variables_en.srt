1
00:00:05,240 --> 00:00:07,160
Hi guys. In this hands on lesson,

2
00:00:07,170 --> 00:00:11,720
I'm going to show you how we can use environment variables with AWS Lambda.

3
00:00:12,070 --> 00:00:14,560
And we're going to see an insecure way of doing it and then

4
00:00:14,560 --> 00:00:19,190
a more secure way of actually storing that information in an encrypted format.

5
00:00:19,370 --> 00:00:21,720
So I have this file in the course downloads.

6
00:00:21,720 --> 00:00:24,350
So again we're in the AWS Lambda directory

7
00:00:24,540 --> 00:00:27,750
and it's Lambda-environ-test.py.

8
00:00:28,320 --> 00:00:29,960
So you'll find this python code.

9
00:00:30,440 --> 00:00:32,560
And what this python code is going to do

10
00:00:32,940 --> 00:00:37,220
is we're going to supply some information in environment variables and the

11
00:00:37,220 --> 00:00:41,660
environment variable names will be DB_HOST USER and PASS.

12
00:00:42,140 --> 00:00:45,240
And so then it's going to print to the screen and it's going to show us

13
00:00:45,500 --> 00:00:47,590
that we're connected with whatever the values

14
00:00:47,590 --> 00:00:49,850
are associated with each of these variables.

15
00:00:50,240 --> 00:00:53,205
So if that doesn't make sense don't worry, it will in a moment.

16
00:00:53,229 --> 00:00:57,380
Let's copy this information to our clipboards and go to Lambda.

17
00:00:57,590 --> 00:01:00,050
In the Lambda console, I'm going to create a function.

18
00:01:00,440 --> 00:01:02,220
I'm going to call it My Environ Test

19
00:01:02,640 --> 00:01:05,120
and I'm going to change to let's just use the most

20
00:01:05,120 --> 00:01:07,098
recent version of python.

21
00:01:07,122 --> 00:01:12,150
And the execution role is fine, I'll leave that to create an execution role for me.

22
00:01:12,540 --> 00:01:14,096
And then let's create this function.

23
00:01:14,540 --> 00:01:16,250
Now that the function has been created,

24
00:01:16,260 --> 00:01:19,530
what we're gonna do is we're going to delete all this code

25
00:01:19,810 --> 00:01:23,480
and we're going to paste in that code which we just copied

26
00:01:23,720 --> 00:01:25,010
and click on deploy.

27
00:01:25,140 --> 00:01:28,331
Now, what we want to do is add in our environment variables.

28
00:01:28,355 --> 00:01:30,460
To do that, we go to configuration

29
00:01:30,930 --> 00:01:34,500
and just scroll down a little way and on the left hand side on these tabs,

30
00:01:34,500 --> 00:01:36,190
you'll find environment variables

31
00:01:36,410 --> 00:01:37,650
and then click on edit.

32
00:01:38,340 --> 00:01:39,860
So we're going to click on add

33
00:01:40,340 --> 00:01:42,890
and the first one will be DB_HOST.

34
00:01:43,320 --> 00:01:46,040
And for the value, I'm going to add my fake database.

35
00:01:46,440 --> 00:01:48,960
The next one is going to be DB_USER,

36
00:01:49,540 --> 00:01:51,440
and for the value, I'm going to enter Neal.

37
00:01:51,740 --> 00:01:55,480
And then lastly, the third one will be DB_PASS

38
00:01:55,820 --> 00:01:57,820
and I'm going to give it a fake password.

39
00:01:58,160 --> 00:02:03,030
Now, it is important that the keys are correct. So they have to be DB_HOST,

40
00:02:03,030 --> 00:02:06,110
DB_USER, and DB_PASS because

41
00:02:06,110 --> 00:02:09,160
remember that was actually specified in our code.

42
00:02:09,550 --> 00:02:12,390
The actual values can be anything, you can put your name in there,

43
00:02:12,400 --> 00:02:13,870
any password you want.

44
00:02:13,870 --> 00:02:17,220
This is just for test purposes so it doesn't matter.

45
00:02:17,520 --> 00:02:20,630
And of course we don't have a database for this test but if

46
00:02:20,630 --> 00:02:25,250
we did this would be the string for connectivity to the database.

47
00:02:25,740 --> 00:02:28,250
So let's just save the environment variables.

48
00:02:28,390 --> 00:02:29,970
Now if we go to test,

49
00:02:30,540 --> 00:02:34,260
and I'm just going to call this a Test Event T1.

50
00:02:34,840 --> 00:02:36,000
Click on save.

51
00:02:36,290 --> 00:02:37,600
Let's run the test.

52
00:02:37,750 --> 00:02:38,780
It's successful.

53
00:02:38,780 --> 00:02:43,360
Let's look at the details and it's obviously just a simple Hello From Lambda.

54
00:02:43,840 --> 00:02:49,670
But if we scroll down to the log output, what we can see is we get this message.

55
00:02:49,700 --> 00:02:52,980
So it says connected to my fake database as

56
00:02:52,980 --> 00:02:56,090
Neal with, and then it's got the password here

57
00:02:56,270 --> 00:03:00,851
in plain text for anyone to see who can execute this function.

58
00:03:00,875 --> 00:03:05,130
But also if we go to monitor and go to CloudWatch logs,

59
00:03:05,420 --> 00:03:07,860
of course, it's going to be recorded here as well.

60
00:03:08,340 --> 00:03:10,950
So if we go into this log stream

61
00:03:11,110 --> 00:03:12,660
and we can see that information.

62
00:03:13,440 --> 00:03:14,960
So this would not be good.

63
00:03:15,440 --> 00:03:19,730
Of course, you might not have code to actually write this into CloudWatch logs

64
00:03:19,740 --> 00:03:24,450
but you get the idea this information could be seen some way or another.

65
00:03:24,460 --> 00:03:29,450
All it takes is some kind of error or an oversight and this information gets leaked.

66
00:03:29,940 --> 00:03:33,190
So what we want to do is we want to enable encryption

67
00:03:33,300 --> 00:03:34,860
for this information.

68
00:03:35,240 --> 00:03:39,790
We're going to use a KMS key, that's a Key Management Service key.

69
00:03:39,790 --> 00:03:43,250
So that's going to be the key that's used for encryption.

70
00:03:43,740 --> 00:03:47,310
On the KMS dashboard here, I'm going to click on create key.

71
00:03:47,630 --> 00:03:50,236
I'm going to accept the defaults for symmetric.

72
00:03:50,261 --> 00:03:53,550
And the usage will be to encrypt and decrypt information.

73
00:03:54,240 --> 00:03:55,440
I'll give it a name.

74
00:03:55,720 --> 00:03:58,330
I'm simply gonna call mine My Environ Test.

75
00:03:58,590 --> 00:04:01,680
For the administrators, I will be the administrator.

76
00:04:02,030 --> 00:04:04,260
So that gives me full permissions.

77
00:04:04,840 --> 00:04:06,060
And if I click on next,

78
00:04:06,540 --> 00:04:10,980
I might want to use this key myself but more specifically for this exercise,

79
00:04:11,000 --> 00:04:17,760
we need to allow the role from the function to be able to use the key.

80
00:04:18,140 --> 00:04:21,450
So what we need to know is the role name for our function.

81
00:04:22,040 --> 00:04:24,760
So my function is called my environ test.

82
00:04:25,070 --> 00:04:29,120
So let's have a look and see if we can find a role, it shouldn't be far away.

83
00:04:29,260 --> 00:04:33,860
So I have a few rolls here that we can see that have been created for our services.

84
00:04:34,240 --> 00:04:36,880
And this is the one, my environ test role.

85
00:04:37,080 --> 00:04:39,510
So I select that, click on next,

86
00:04:39,750 --> 00:04:43,400
and then we can click on finish. And you can actually see the full policy here.

87
00:04:43,590 --> 00:04:47,560
The permissions that are applied for key administration,

88
00:04:47,820 --> 00:04:50,260
and then usage of the key as well.

89
00:04:50,840 --> 00:04:53,050
So I'm happy with that. Let's click on finish.

90
00:04:53,640 --> 00:04:56,340
So we now have a key that we can use.

91
00:04:56,840 --> 00:05:00,050
Now when you finish with this exercise you might want to remove these keys.

92
00:05:00,050 --> 00:05:02,410
There is a small charge, maybe a dollar a month.

93
00:05:02,420 --> 00:05:04,830
What you can do with your key once you've finished

94
00:05:05,020 --> 00:05:07,790
is choose the key. I'm not using this particular one.

95
00:05:08,020 --> 00:05:10,200
Go to schedule key deletion

96
00:05:10,560 --> 00:05:12,860
and you can bring this down to seven days.

97
00:05:12,885 --> 00:05:16,520
So they make sure that you don't accidentally delete a key.

98
00:05:16,520 --> 00:05:17,960
They give you a waiting period.

99
00:05:18,440 --> 00:05:23,650
So what I want to do is confirm, schedule deletion, and that key will be deleted.

100
00:05:23,850 --> 00:05:26,660
So make sure that the key that you are using is enabled

101
00:05:27,040 --> 00:05:31,220
and in our case we can now go back to our Lambda function.

102
00:05:31,590 --> 00:05:33,360
Let's go to configuration

103
00:05:34,040 --> 00:05:37,350
and click edit next to environment variables.

104
00:05:37,490 --> 00:05:39,480
Expand encryption configuration.

105
00:05:39,480 --> 00:05:42,950
We're going to enable helpers for encryption in transit.

106
00:05:43,440 --> 00:05:47,340
We're going to use a customer master key, that is what we just created.

107
00:05:47,620 --> 00:05:51,770
And then let's choose the key that we just created. Mine is called My Environ Test.

108
00:05:52,140 --> 00:05:56,440
Then we need to enable the encryption for our specific variables.

109
00:05:56,440 --> 00:06:00,260
So I'm just going to encrypt the environment variable for my password.

110
00:06:01,040 --> 00:06:04,160
I'm going to choose the key. So the key is already chosen.

111
00:06:04,160 --> 00:06:07,240
If it's not there, just choose it from the drop down box.

112
00:06:08,240 --> 00:06:12,590
And there is some code here that we need. So you might want to copy this code.

113
00:06:12,590 --> 00:06:17,260
I've actually got it in my clipboard, but this is useful code because it

114
00:06:17,260 --> 00:06:22,931
gives us the extra code that we need for decrypting the environment variable.

115
00:06:22,955 --> 00:06:24,650
So I'm going to choose encrypt.

116
00:06:25,340 --> 00:06:26,400
I can save.

117
00:06:26,650 --> 00:06:29,360
And let's go back and we need to make some code updates.

118
00:06:29,940 --> 00:06:33,580
So I've made another copy of my code in the file here.

119
00:06:33,600 --> 00:06:36,040
This will always be ready for you when you open this file.

120
00:06:36,420 --> 00:06:40,760
So always make sure that for the first part of the exercise you just use the code above

121
00:06:41,200 --> 00:06:42,810
and then we've got this code here.

122
00:06:42,810 --> 00:06:46,330
In fact, I'll put a little line break in here just to make it clear.

123
00:06:46,660 --> 00:06:48,210
So what's changed in the code?

124
00:06:48,210 --> 00:06:53,710
Well we've imported the boto3 module and the b64decode.

125
00:06:54,240 --> 00:06:55,790
And then you can see that we've added on

126
00:06:55,790 --> 00:06:59,460
this encryption and decryption using the boto3 library.

127
00:07:00,040 --> 00:07:01,750
It takes in the cipher text

128
00:07:01,910 --> 00:07:04,890
and then it's able to decode into plain text. And we'll see how

129
00:07:04,890 --> 00:07:08,700
we can both see the encrypted value and the decrypted value soon.

130
00:07:09,240 --> 00:07:12,270
So what I need to do is simply copy all of this code

131
00:07:12,820 --> 00:07:16,360
and let's go back to our function. So back on the function. Let's go to code.

132
00:07:16,840 --> 00:07:21,460
We need to remove this execution result. We can delete everything here,

133
00:07:21,940 --> 00:07:23,910
paste this in, click on deploy.

134
00:07:24,190 --> 00:07:25,750
And then let's run a test.

135
00:07:26,140 --> 00:07:29,590
And in the execution result, we can see the response

136
00:07:29,590 --> 00:07:33,670
here saying connected to my fake database as Neal With,

137
00:07:33,990 --> 00:07:37,150
and then the password is actually fully encrypted.

138
00:07:37,540 --> 00:07:40,890
So that information is no longer being sent in plain text.

139
00:07:40,890 --> 00:07:43,965
Of course, if we go over to CloudWatch logs,

140
00:07:43,989 --> 00:07:46,190
we'll be able to see exactly the same thing.

141
00:07:46,430 --> 00:07:49,450
So let's go into the latest stream here,

142
00:07:50,040 --> 00:07:54,150
and we can see that the encrypted value is stored in CloudWatch logs.

143
00:07:54,490 --> 00:07:58,350
Now you might also want to see that you can decrypt that information.

144
00:07:58,740 --> 00:08:03,210
So let's go to underneath the print command here, put in a new line

145
00:08:03,450 --> 00:08:06,070
and then we're gonna put in print decrypted.

146
00:08:06,230 --> 00:08:09,960
Now, how can we prove that we are able to actually decrypt that information?

147
00:08:09,960 --> 00:08:13,650
Well, what I'm gonna do is just in the editor here,

148
00:08:14,040 --> 00:08:15,830
under where it says print,

149
00:08:16,090 --> 00:08:17,700
I'm going to put in a new line

150
00:08:17,850 --> 00:08:23,160
and I'm also going to print but this time I'm going to type in decrypt it.

151
00:08:23,840 --> 00:08:25,250
And simply deploy.

152
00:08:26,030 --> 00:08:27,860
And then let's go and test.

153
00:08:28,340 --> 00:08:32,549
So this time in the execution result, we see the encrypted value.

154
00:08:32,630 --> 00:08:36,808
But then also on this new line here we see the decrypted value as well.

155
00:08:36,808 --> 00:08:40,140
So we're able to decrypt that information when we need to.

156
00:08:40,340 --> 00:08:41,650
So that's it for this lesson.

157
00:08:41,650 --> 00:08:45,290
Don't forget to go back and we have finished up with our KMS key.

158
00:08:45,540 --> 00:08:50,780
So you can always disable key usage, and that means it's no longer usable.

159
00:08:51,030 --> 00:08:55,350
And then of course as I showed you before, you can then schedule for key deletion.

160
00:08:55,550 --> 00:08:59,660
So I'm gonna use seven days, confirm, and that one is gone as well.

161
00:09:00,040 --> 00:09:02,350
So I hope you enjoyed that. I will see you in the next lesson.

